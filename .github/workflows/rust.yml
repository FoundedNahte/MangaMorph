name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Tesseract
      run: sudo apt-get install libleptonica-dev libtesseract-dev clang tesseract-ocr-eng
    - name: Install OpenCV
      run: sudo apt-get install libopencv-dev
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Cache Cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/   
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-
          
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  lint_and_fmt:
    name: Lint and Format
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Install Tesseract
        run: sudo apt-get install libleptonica-dev libtesseract-dev clang tesseract-ocr-eng
      - name: Install OpenCV
        run: sudo apt-get install libopencv-dev
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/   
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Formatting Check
        run: | 
          cargo fmt --all -- --check
      - name: Lint Check
        run: |
          cargo clippy --all-features
          cargo clippy -- --D warnings
<<<<<<< HEAD
    
=======
    
>>>>>>> e82a211355c1fe7c818fa1eac2d019f8bacd1e4f
